@page "/todo"
@inject Services.IToDoListService Service
@inject NavigationManager navManager

<div class="d-flex justify-content-between align-items-center">
    <h3>To Do List</h3>
    <a href="/createtodo">
        <button class="btn btn-primary">Create New Task</button>
    </a>
</div>

@if (todos == null)
{
    <p>Loading...</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Complete?</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todo in todos)
            {
                <tr>
                    <td>@todo.Task</td>
                    <td>@todo.Description</td>
                    <td>@todo.DueDate</td>
                    @if (todo.IsComplete)
                    {
                        <td>Yes</td>
                    }
                    else
                    {
                        <td>No</td>
                    }
                    <td>
                        <a href="todo/@todo.Id">
                        <button class="btn btn-primary">Details</button>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Models.ToDoList> todos;

    protected override async Task OnInitializedAsync()
    {
        todos = (await Service.GetToDoLists()).ToList();
    }

    private async Task MarkAsComplete(int id)
    {
        Console.WriteLine($"MarkAsComplete called with id: {id}");
        await Service.MarkTaskComplete(id);
        navManager.NavigateTo("/ToDo");
    }
}
