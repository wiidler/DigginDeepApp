// <auto-generated />
using DigginDeep.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigginDeep.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241016201823_InitialDBMigration")]
    partial class InitialDBMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigginDeep.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentHead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentEmail = "danlin@mst.edu",
                            DepartmentHead = "Dr. Dan Lin",
                            Major = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentEmail = "bmcmillin@mst.edu",
                            DepartmentHead = "Dr. Bruce McMillin",
                            Major = "Computer Engineering"
                        });
                });

            modelBuilder.Entity("DigginDeep.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@mst.edu",
                            Major = "Computer Science",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janedoe@mst.edu",
                            Major = "Computer Engineering",
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            Email = "johnsmith@mst.edu",
                            Major = "Information Science and Technology",
                            Name = "John Smith"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
