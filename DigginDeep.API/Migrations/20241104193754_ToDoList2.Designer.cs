// <auto-generated />
using System;
using DigginDeep.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigginDeep.API.Migrations
{
    [DbContext(typeof(DDDatabase))]
    [Migration("20241104193754_ToDoList2")]
    partial class ToDoList2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("DigginDeep.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartmentEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentHead")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentEmail = "danlin@mst.edu",
                            DepartmentHead = "Dr. Dan Lin",
                            Major = "Computer Science"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentEmail = "bmcmillin@mst.edu",
                            DepartmentHead = "Dr. Bruce McMillin",
                            Major = "Computer Engineering"
                        });
                });

            modelBuilder.Entity("DigginDeep.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Designing and building a rover to compete in the University Rover Challenge",
                            Email = "marsrover@mst.edu",
                            Name = "Mars Rover Design Team",
                            website = "marsrover.mst.edu"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The Institute of Electrical and Electronics Engineers student chapter at Missouri S&T",
                            Email = "ieee@mst.edu",
                            Name = "IEEE",
                            website = "ieee.mst.edu"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The Association for Computing Machinery student chapter at Missouri S&T",
                            Email = "acm@mst.edu",
                            Name = "ACM",
                            website = "acm.mst.edu"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Designing and building a rocket to compete in the Spaceport America Cup",
                            Email = "rocket@mst.edu",
                            Name = "Rocket Design Team",
                            website = "rocket.mst.edu"
                        });
                });

            modelBuilder.Entity("DigginDeep.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "johndoe@mst.edu",
                            Major = "Computer Science",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "janedoe@mst.edu",
                            Major = "Computer Engineering",
                            Name = "Jane Doe"
                        },
                        new
                        {
                            Id = 3,
                            Email = "johnsmith@mst.edu",
                            Major = "Information Science and Technology",
                            Name = "John Smith"
                        });
                });

            modelBuilder.Entity("DigginDeep.Models.ToDoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ToDoLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Complete the homework for the week",
                            DueDate = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            IsComplete = false,
                            Task = "Complete Homework"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
